plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.3.5"
    id("io.micronaut.test-resources") version "4.3.5"
    id("io.micronaut.aot") version "4.3.5"
}

version = "0.1"
group = "com.example.swagger"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    annotationProcessor("io.micronaut.validation:micronaut-validation-processor")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor group: 'io.reactivex.rxjava2', name: 'rxjava', version: '2.2.4'
    annotationProcessor group: 'org.mapstruct', name: 'mapstruct', version: '1.5.5.Final'
    annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: '1.5.5.Final'

    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.validation:micronaut-validation")
    implementation("jakarta.validation:jakarta.validation-api")
    implementation("io.micronaut:micronaut-http-client")
    implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.5.5.Final'
    implementation group: 'org.mapstruct', name: 'mapstruct-processor', version: '1.5.5.Final'
    implementation group: 'io.reactivex.rxjava2', name: 'rxjava', version: '2.2.4'
    implementation("io.micronaut.rxjava3:micronaut-rxjava3")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.liquibase:micronaut-liquibase")
    implementation("io.swagger.core.v3:swagger-annotations")

    compileOnly("io.micronaut:micronaut-http-client")
    compileOnly("org.projectlombok:lombok")

    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.postgresql:postgresql")

    testImplementation("io.micronaut:micronaut-http-client")

}


application {
    mainClass.set("com.example.swagger.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}


graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.swagger.*")
    }
    aot {
    // Please review carefully the optimizations enabled below
    // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
    }
}

tasks.withType(JavaCompile) {
    options.fork = true
    options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=redoc.enabled=false,rapidoc.enabled=false,swagger-ui.enabled=true,swagger-ui.theme=flattop'
}



